<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oauth.dao.UserEntityMapper">
  <resultMap id="BaseResultMap" type="com.oauth.entity.UserEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="Integer" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_infor
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_infor
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.oauth.entity.UserEntity">
    insert into user_infor (id, username, password, 
      status)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oauth.entity.UserEntity">
    insert into user_infor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oauth.entity.UserEntity">
    update user_infor
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oauth.entity.UserEntity">
    update user_infor
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

   <resultMap id="UserClient" extends="BaseResultMap" type="com.oauth.entity.UserEntity">
    <!--一对多，方式一-->
        <collection property="roles" ofType="com.oauth.entity.ClientAuthoritiesEntity" >
            <id column="client_authorities_id" jdbcType="BIGINT" property="clientAuthoritiesId" />
            <result column="authorities" jdbcType="VARCHAR" property="authorities" />
            <result column="key_client_server_id" jdbcType="BIGINT" property="clientServerId" />
        </collection>
  </resultMap>

  <select id="selectByUsername" resultMap="UserClient">
    select 
      t1.id, t1.username, t1.password, t1.status,
      t3.client_authorities_id,t3.authorities,t3.client_authorities_id key_client_server_id
    from user_infor t1 
      left join user_client t2 on t1.id = t2.user_id
      left join client_authorities t3 on t2.client_authorities_id = t3.client_authorities_id  
    where 
      1=1
      <if test="username != null and username != ''">
        and t1.username = #{username}
      </if>    
  </select>

</mapper>