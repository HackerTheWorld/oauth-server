<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oauth.dao.DepartmentRelationshipEntityMapper">
  <resultMap id="BaseResultMap" type="com.oauth.entity.DepartmentRelationshipEntity">
    <id column="department_relationship_id" jdbcType="BIGINT" property="departmentRelationshipId" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="department_parent_id" jdbcType="BIGINT" property="departmentParentId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.oauth.entity.DepartmentRelationshipEntity">
    <result column="department_path" jdbcType="LONGVARCHAR" property="departmentPath" />
  </resultMap>
  <sql id="Base_Column_List">
    department_relationship_id, department_id, department_parent_id
  </sql>
  <sql id="Blob_Column_List">
    department_path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from department_relationship
    where department_relationship_id = #{departmentRelationshipId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from department_relationship
    where department_relationship_id = #{departmentRelationshipId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.oauth.entity.DepartmentRelationshipEntity">
    insert into department_relationship (department_relationship_id, department_id, 
      department_parent_id, department_path)
    values (#{departmentRelationshipId,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT}, 
      #{departmentParentId,jdbcType=BIGINT}, #{departmentPath,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oauth.entity.DepartmentRelationshipEntity">
    insert into department_relationship
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentRelationshipId != null and departmentRelationshipId != 0">
        department_relationship_id,
      </if>
      <if test="departmentId != null and departmentId != 0">
        department_id,
      </if>
      <if test="departmentParentId != null and departmentParentId != 0">
        department_parent_id,
      </if>
      <if test="departmentPath != null and departmentPath != ''">
        department_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentRelationshipId != null and departmentRelationshipId != 0">
        #{departmentRelationshipId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null and departmentId != 0">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="departmentParentId != null and departmentParentId != 0">
        #{departmentParentId,jdbcType=BIGINT},
      </if>
      <if test="departmentPath != null and departmentPath != ''">
        #{departmentPath,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oauth.entity.DepartmentRelationshipEntity">
    update department_relationship
    <set>
      <if test="departmentId != null and departmentId != 0">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="departmentParentId != null and departmentParentId != 0">
        department_parent_id = #{departmentParentId,jdbcType=BIGINT},
      </if>
      <if test="departmentPath != null and departmentPath != ''">
        department_path = #{departmentPath,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where department_relationship_id = #{departmentRelationshipId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.oauth.entity.DepartmentRelationshipEntity">
    update department_relationship
    set department_id = #{departmentId,jdbcType=BIGINT},
      department_parent_id = #{departmentParentId,jdbcType=BIGINT},
      department_path = #{departmentPath,jdbcType=LONGVARCHAR}
    where department_relationship_id = #{departmentRelationshipId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oauth.entity.DepartmentRelationshipEntity">
    update department_relationship
    set department_id = #{departmentId,jdbcType=BIGINT},
      department_parent_id = #{departmentParentId,jdbcType=BIGINT}
    where department_relationship_id = #{departmentRelationshipId,jdbcType=BIGINT}
  </update>
</mapper>