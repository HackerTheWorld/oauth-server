<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oauth.dao.RoleEntityMapper">
  <resultMap id="BaseResultMap" type="com.oauth.entity.RoleEntity">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.oauth.entity.RoleEntity">
    insert into role (role_id, role_name)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oauth.entity.RoleEntity">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null and roleId != 0">
        role_id,
      </if>
      <if test="roleName != null and roleName != ''">
        role_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null and roleId != 0"> #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null and roleName != ''"> #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oauth.entity.RoleEntity">
    update role
    <set>
      <if test="roleName != null and roleName != ''">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oauth.entity.RoleEntity">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>

  <resultMap id="RoleVo" extends="BaseResultMap" type="com.oauth.vo.RoleVo">
    <!--一对多，方式一-->
    <collection property="meum" ofType="com.oauth.entity.MeumEntityWithBLOBs" javaType="java.util.Set">
      <id column="meum_id" jdbcType="BIGINT" property="meumId" />
      <result column="meum_name" jdbcType="VARCHAR" property="meumName" />
      <result column="parent_id" jdbcType="BIGINT" property="parentId" />
      <result column="meum_type" jdbcType="VARCHAR" property="meumType" />
      <result column="is_refresh" jdbcType="INTEGER" property="isRefresh" />
      <result column="order_number" jdbcType="INTEGER" property="orderNumber" />
      <result column="visible" jdbcType="INTEGER" property="visible" />
      <result column="target" jdbcType="VARCHAR" property="target" />
      <result column="url" jdbcType="LONGVARCHAR" property="url" />
      <result column="icon" jdbcType="LONGVARCHAR" property="icon" />
    </collection>
  </resultMap>

  <select id="selectByIdName" resultMap="BaseResultMap">
    select t1.*,t2.*
    from role t1
      left join role_meum a on a.role_id = t1.role_id
      left join meum t2 on t2.meum_id = a.meum_id
    where 1=1
    <if test="roleId != null and roleId != 0">
       and role_id = #{roleId}
    </if>
    <if test="roleName != null and roleName != ''">
       and role_name = #{roleId}
    </if>
  </select>
</mapper>